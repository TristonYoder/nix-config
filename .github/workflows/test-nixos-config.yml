name: Test NixOS Flake Configuration

on:
  push:
    branches-ignore: []
  pull_request:
    branches: [ main ]

jobs:
  test-configuration:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
        tags: tag:github-actions
        
    - name: Wait for Tailscale connection
      run: sleep 10
      
    - name: Test NixOS Flake Configuration
      run: |
        # Connect to server via Tailscale
        SERVER_HOSTNAME="${{ secrets.NIXOS_SERVER_HOSTNAME }}"
        echo "Connecting to server at $SERVER_HOSTNAME"
        
        # Configure SSH to bypass host key verification
        mkdir -p ~/.ssh
        echo "Host $SERVER_HOSTNAME" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
        chmod 600 ~/.ssh/config
        
        # Copy configuration to server
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='*.save' \
          --exclude='nextcloud/admin-pass' \
          ./ ${{ secrets.NIXOS_SERVER_USER }}@$SERVER_HOSTNAME:/tmp/nixos-config-test/
        
        # Test flake configuration on server
        ssh ${{ secrets.NIXOS_SERVER_USER }}@$SERVER_HOSTNAME << 'EOF'
          set -e
          
          # Navigate to test directory
          cd /tmp/nixos-config-test
          
          # Test flake syntax first
          echo "Testing flake syntax..."
          if ! nix flake check; then
            echo "❌ Flake syntax check failed!"
            echo "FAILED" > /tmp/nixos-test-result.txt
            exit 1
          fi
          
          # Test the NixOS configuration using flake
          echo "Testing NixOS configuration with flake..."
          if sudo nixos-rebuild dry-run --flake .#david; then
            echo "✅ Configuration test passed!"
            echo "SUCCESS" > /tmp/nixos-test-result.txt
          else
            echo "❌ Configuration test failed!"
            echo "FAILED" > /tmp/nixos-test-result.txt
            exit 1
          fi
        EOF
        
        # Get test result
        TEST_RESULT=$(ssh ${{ secrets.NIXOS_SERVER_USER }}@$SERVER_HOSTNAME "cat /tmp/nixos-test-result.txt")
        
        if [ "$TEST_RESULT" = "SUCCESS" ]; then
          echo "✅ NixOS configuration test passed!"
        else
          echo "❌ NixOS configuration test failed!"
          exit 1
        fi
        
    - name: Set GitHub status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ NixOS configuration test passed"
        else
          echo "❌ NixOS configuration test failed"
        fi