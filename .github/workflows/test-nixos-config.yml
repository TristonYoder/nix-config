name: Test NixOS Flake Configuration

on:
  push:
    branches-ignore: []
  pull_request:
    branches: [ main ]

env:
  MATRIX_HOMESERVER_URL: ${{ secrets.MATRIX_HOMESERVER_URL }}
  MATRIX_ROOM_ID: ${{ secrets.MATRIX_ROOM_ID }}
  MATRIX_ACCESS_TOKEN: ${{ secrets.MATRIX_ACCESS_TOKEN }}

jobs:
  # First, check flake syntax locally (fast fail)
  check-flake-syntax:
    runs-on: ubuntu-latest
    
    steps:
    - name: Notify start
      if: always()
      uses: ./.github/actions/matrix-notification
      with:
        message: |
          üöÄ GitHub Actions: Testing NixOS configuration
          Workflow: Test NixOS Flake Configuration
          Status: Starting syntax check
          Branch: ${{ github.ref_name }}
          Committer: ${{ github.actor }}
        room_id: ${{ secrets.MATRIX_ROOM_ID }}
        homeserver_url: ${{ secrets.MATRIX_HOMESERVER_URL }}
        access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
      
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    
    - name: Check flake syntax
      run: |
        echo "Testing flake syntax..."
        nix flake check --all-systems
        echo "‚úÖ Flake syntax check passed!"
    
    - name: Notify success
      if: success()
      uses: ./.github/actions/matrix-notification
      with:
        message: |
          ‚úÖ GitHub Actions: Syntax check passed
          Workflow: Test NixOS Flake Configuration
          Status: Success
          Branch: ${{ github.ref_name }}
        room_id: ${{ secrets.MATRIX_ROOM_ID }}
        homeserver_url: ${{ secrets.MATRIX_HOMESERVER_URL }}
        access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
    
    - name: Notify failure
      if: failure()
      uses: ./.github/actions/matrix-notification
      with:
        message: |
          ‚ùå GitHub Actions: Syntax check failed
          Workflow: Test NixOS Flake Configuration
          Status: Failed
          Branch: ${{ github.ref_name }}
          View logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        room_id: ${{ secrets.MATRIX_ROOM_ID }}
        homeserver_url: ${{ secrets.MATRIX_HOMESERVER_URL }}
        access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}

  # Test all NixOS configurations
  test-configurations:
    runs-on: ubuntu-latest
    needs: check-flake-syntax
    strategy:
      matrix:
        host: 
          - name: david
            hostname: david
          - name: pits
            hostname: pits
          # - name: tristons-desk
            # hostname: tristons-desk
      fail-fast: false  # Continue testing other hosts even if one fails
    
    steps:
    - name: Notify start
      if: always()
      uses: ./.github/actions/matrix-notification
      with:
        message: |
          üöÄ GitHub Actions: Testing ${{ matrix.host.name }} configuration
          Workflow: Test NixOS Flake Configuration
          Host: ${{ matrix.host.name }}
          Status: Starting test
          Branch: ${{ github.ref_name }}
        room_id: ${{ secrets.MATRIX_ROOM_ID }}
        homeserver_url: ${{ secrets.MATRIX_HOMESERVER_URL }}
        access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
      
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
        tags: tag:github-actions
        
    - name: Wait for Tailscale connection
      run: sleep 10
      
    - name: Test ${{ matrix.host.name }} Configuration
      run: |
        # Connect to server via Tailscale
        SERVER_HOSTNAME="${{ matrix.host.hostname }}"
        echo "Testing configuration for ${{ matrix.host.name }} on $SERVER_HOSTNAME"
        
        # Configure SSH to bypass host key verification
        mkdir -p ~/.ssh
        echo "Host *" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
        chmod 600 ~/.ssh/config
        
        # Setup SSH key
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        # Copy configuration to server
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='*.save' \
          --exclude='nextcloud/admin-pass' \
          ./ ${{ secrets.NIXOS_SERVER_USER }}@$SERVER_HOSTNAME:/tmp/nixos-config-test-${{ matrix.host.name }}/
        
        # Test configuration on server
        ssh ${{ secrets.NIXOS_SERVER_USER }}@$SERVER_HOSTNAME << EOF
          set -e
          
          # Navigate to test directory
          cd /tmp/nixos-config-test-${{ matrix.host.name }}
          
          # Test the NixOS configuration using flake
          echo "Testing NixOS configuration for ${{ matrix.host.name }}..."
          if sudo nixos-rebuild dry-run --flake .#${{ matrix.host.name }}; then
            echo "‚úÖ Configuration test passed for ${{ matrix.host.name }}!"
            echo "SUCCESS" > /tmp/nixos-test-result-${{ matrix.host.name }}.txt
          else
            echo "‚ùå Configuration test failed for ${{ matrix.host.name }}!"
            echo "FAILED" > /tmp/nixos-test-result-${{ matrix.host.name }}.txt
            exit 1
          fi
        EOF
        
        # Get test result
        TEST_RESULT=$(ssh ${{ secrets.NIXOS_SERVER_USER }}@$SERVER_HOSTNAME "cat /tmp/nixos-test-result-${{ matrix.host.name }}.txt")
        
        if [ "$TEST_RESULT" = "SUCCESS" ]; then
          echo "‚úÖ NixOS configuration test passed for ${{ matrix.host.name }}!"
        else
          echo "‚ùå NixOS configuration test failed for ${{ matrix.host.name }}!"
          exit 1
        fi
        
    - name: Set GitHub status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "‚úÖ ${{ matrix.host.name }} configuration test passed"
        else
          echo "‚ùå ${{ matrix.host.name }} configuration test failed"
        fi
    
    - name: Notify success
      if: success()
      uses: ./.github/actions/matrix-notification
      with:
        message: |
          ‚úÖ GitHub Actions: Test passed for ${{ matrix.host.name }}
          Workflow: Test NixOS Flake Configuration
          Host: ${{ matrix.host.name }}
          Status: Success
          Branch: ${{ github.ref_name }}
        room_id: ${{ secrets.MATRIX_ROOM_ID }}
        homeserver_url: ${{ secrets.MATRIX_HOMESERVER_URL }}
        access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
    
    - name: Notify failure
      if: failure()
      uses: ./.github/actions/matrix-notification
      with:
        message: |
          ‚ùå GitHub Actions: Test failed for ${{ matrix.host.name }}
          Workflow: Test NixOS Flake Configuration
          Host: ${{ matrix.host.name }}
          Status: Failed
          Branch: ${{ github.ref_name }}
          View logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        room_id: ${{ secrets.MATRIX_ROOM_ID }}
        homeserver_url: ${{ secrets.MATRIX_HOMESERVER_URL }}
        access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}