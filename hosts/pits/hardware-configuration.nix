# Hardware configuration for pits (Pi in the Sky)
# This file should be replaced with the actual hardware-configuration.nix
# generated by nixos-generate-config on the target device (Raspberry Pi)

{ config, lib, pkgs, modulesPath, ... }:

{
  # PLACEHOLDER: This is a template file
  # On the actual Raspberry Pi, run: sudo nixos-generate-config
  # Then copy the generated hardware-configuration.nix to this location
  
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # =============================================================================
  # RASPBERRY PI SPECIFIC CONFIGURATION
  # =============================================================================
  
  # For Raspberry Pi 4/5, you'll likely need:
  # boot.kernelPackages = pkgs.linuxPackages_rpi4;
  # Or for older Pi models, adjust accordingly
  
  # Example Raspberry Pi boot configuration
  boot.loader = {
    grub.enable = false;
    generic-extlinux-compatible.enable = lib.mkDefault true;
  };

  # Raspberry Pi kernel modules
  boot.initrd.availableKernelModules = [ 
    "usbhid" 
    "usb_storage" 
    "vc4" 
    "pcie_brcmstb"  # For PCIe on Pi 4/5
    "reset_raspberrypi"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  # Example filesystem configuration - REPLACE WITH ACTUAL
  fileSystems."/" = {
    device = "/dev/disk/by-label/NIXOS_SD";  # Adjust based on your setup
    fsType = "ext4";
  };

  # No swap by default (can use zram instead)
  swapDevices = [ ];

  # Enable zram swap for limited RAM
  zramSwap.enable = lib.mkDefault true;
  zramSwap.memoryPercent = lib.mkDefault 50;

  # =============================================================================
  # HARDWARE SUPPORT
  # =============================================================================
  
  # Enable GPU acceleration (Raspberry Pi VideoCore)
  hardware.raspberry-pi."4".fkms-3d.enable = lib.mkDefault true;
  
  # Audio support
  # hardware.pulseaudio.enable = lib.mkDefault false;
  
  # Enable firmware updates
  hardware.enableRedistributableFirmware = lib.mkDefault true;

  # =============================================================================
  # NETWORKING
  # =============================================================================
  
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  # =============================================================================
  # PLATFORM
  # =============================================================================
  
  # Raspberry Pi is typically aarch64 (ARM 64-bit)
  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  
  # Or for older 32-bit Pi models:
  # nixpkgs.hostPlatform = lib.mkDefault "armv7l-linux";
  
  # =============================================================================
  # POWER MANAGEMENT
  # =============================================================================
  
  # Power management for embedded device
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
  
  # =============================================================================
  # IMPORTANT NOTES
  # =============================================================================
  
  # This is a TEMPLATE configuration for Raspberry Pi
  # You MUST run nixos-generate-config on the actual device
  # and replace this file with the generated configuration
  
  # For NixOS on Raspberry Pi installation:
  # 1. Download NixOS SD image for ARM
  # 2. Flash to SD card
  # 3. Boot the Pi
  # 4. Run: sudo nixos-generate-config
  # 5. Copy /etc/nixos/hardware-configuration.nix to this location
  # 6. Commit and push to repo
  # 7. Run: sudo nixos-rebuild switch --flake github:yourusername/david-nixos#pits
}

