# Hardware configuration for pits (Pi in the Sky)
# This file should be replaced with the actual hardware-configuration.nix
# generated by nixos-generate-config on the cloud VPS

{ config, lib, pkgs, modulesPath, ... }:

{
  # PLACEHOLDER: This is a template file
  # On the actual Raspberry Pi, run: sudo nixos-generate-config
  # Then copy the generated hardware-configuration.nix to this location
  
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # =============================================================================
  # CLOUD VPS CONFIGURATION
  # =============================================================================
  
  # Most cloud VPS use GRUB or systemd-boot
  boot.loader = {
    grub = {
      enable = lib.mkDefault true;
      device = lib.mkDefault "/dev/sda";  # Adjust based on VPS
    };
    # Or for UEFI VPS:
    # systemd-boot.enable = lib.mkDefault true;
    # efi.canTouchEfiVariables = lib.mkDefault true;
  };

  # Common cloud VPS kernel modules
  boot.initrd.availableKernelModules = [ 
    "xhci_pci"
    "ahci"
    "virtio_pci"
    "virtio_blk"
    "virtio_scsi"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  # Example filesystem configuration - REPLACE WITH ACTUAL
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/REPLACE-WITH-ACTUAL-UUID";
    fsType = "ext4";
  };

  # For UEFI VPS, uncomment:
  # fileSystems."/boot" = {
  #   device = "/dev/disk/by-uuid/REPLACE-WITH-ACTUAL-UUID";
  #   fsType = "vfat";
  # };

  # Swap configuration
  swapDevices = [ ];
  
  # Optional: Enable zram swap for low-RAM VPS
  # zramSwap.enable = lib.mkDefault true;
  # zramSwap.memoryPercent = lib.mkDefault 50;

  # =============================================================================
  # HARDWARE SUPPORT
  # =============================================================================
  
  # Enable firmware for cloud VPS
  hardware.enableRedistributableFirmware = lib.mkDefault true;

  # =============================================================================
  # NETWORKING
  # =============================================================================
  
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  # =============================================================================
  # PLATFORM
  # =============================================================================
  
  # Most cloud VPS are x86_64
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  
  # For ARM cloud instances (AWS Graviton, etc.):
  # nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  
  # =============================================================================
  # VIRTUALIZATION
  # =============================================================================
  
  # Most cloud VPS are virtualized
  # This is detected automatically, but can be set explicitly if needed
  # virtualisation.hypervGuest.enable = lib.mkDefault true;  # For Hyper-V
  # virtualisation.vmware.guest.enable = lib.mkDefault true;  # For VMware
  
  # =============================================================================
  # IMPORTANT NOTES
  # =============================================================================
  
  # This is a TEMPLATE configuration for cloud VPS
  # You MUST run nixos-generate-config on the actual VPS
  # and replace this file with the generated configuration
  
  # For NixOS on cloud VPS installation:
  # 1. Provision a VPS with NixOS (or install NixOS on existing VPS)
  # 2. SSH into the VPS
  # 3. Run: sudo nixos-generate-config
  # 4. Copy /etc/nixos/hardware-configuration.nix to this location
  # 5. Commit and push to repo
  # 6. Run: sudo nixos-rebuild switch --flake /etc/nixos#pits
}

